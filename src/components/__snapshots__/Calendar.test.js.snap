// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Calendar/ > render no crashing 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Calendar
    currentMonth={2}
    dateStatistics={
      Object {
        "preferDate": Object {},
        "unavailableDate": Array [],
      }
    }
    filterByName="ALL"
    nextMonth={[MockFunction]}
    onDateClick={[MockFunction]}
    preferDate={Object {}}
    prevMonth={[MockFunction]}
    selectedDate={2}
    setFilterName={[MockFunction]}
    unavailableDate={Array []}
    userList={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <NameFilter
          filterByName="ALL"
          setFilterName={[MockFunction]}
          userList={Array []}
        />,
        <div
          className="calendar"
        >
          <CalendarHeader
            currentMonth={6}
            nextMonth={[Function]}
            prevMonth={[Function]}
          />
          <CalendarDays
            currentMonth={6}
          />
          <CalendarCells
            currentMonth={6}
            onDateClick={[Function]}
            preferDate={Object {}}
            selectedDate={6}
            unavailableDate={Array []}
          />
        </div>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "filterByName": "ALL",
          "setFilterName": [MockFunction],
          "userList": Array [],
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <CalendarHeader
              currentMonth={6}
              nextMonth={[Function]}
              prevMonth={[Function]}
            />,
            <CalendarDays
              currentMonth={6}
            />,
            <CalendarCells
              currentMonth={6}
              onDateClick={[Function]}
              preferDate={Object {}}
              selectedDate={6}
              unavailableDate={Array []}
            />,
          ],
          "className": "calendar",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "currentMonth": 6,
              "nextMonth": [Function],
              "prevMonth": [Function],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "currentMonth": 6,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "currentMonth": 6,
              "onDateClick": [Function],
              "preferDate": Object {},
              "selectedDate": 6,
              "unavailableDate": Array [],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <NameFilter
            filterByName="ALL"
            setFilterName={[MockFunction]}
            userList={Array []}
          />,
          <div
            className="calendar"
          >
            <CalendarHeader
              currentMonth={6}
              nextMonth={[Function]}
              prevMonth={[Function]}
            />
            <CalendarDays
              currentMonth={6}
            />
            <CalendarCells
              currentMonth={6}
              onDateClick={[Function]}
              preferDate={Object {}}
              selectedDate={6}
              unavailableDate={Array []}
            />
          </div>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "filterByName": "ALL",
            "setFilterName": [MockFunction],
            "userList": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <CalendarHeader
                currentMonth={6}
                nextMonth={[Function]}
                prevMonth={[Function]}
              />,
              <CalendarDays
                currentMonth={6}
              />,
              <CalendarCells
                currentMonth={6}
                onDateClick={[Function]}
                preferDate={Object {}}
                selectedDate={6}
                unavailableDate={Array []}
              />,
            ],
            "className": "calendar",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "currentMonth": 6,
                "nextMonth": [Function],
                "prevMonth": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "currentMonth": 6,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "currentMonth": 6,
                "onDateClick": [Function],
                "preferDate": Object {},
                "selectedDate": 6,
                "unavailableDate": Array [],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
